name: SDS Azure Platform
trigger:
  batch: true
  branches:
    include:
      - master

resources:
  repositories:
  - repository: pre-commit-hooks
    type: github
    ref: refs/heads/master
    name: hmcts/pre-commit-hooks
    endpoint: 'hmcts (1)'

parameters:
  - name: components
    displayName: Component to Run
    type: object
    default:
      - deployment: "backendappgateway"
        environment: "sbox"
        dependsOn: "Precheck"
      - deployment: "backendappgateway"
        environment: "dev"
        dependsOn: "sbox_backendappgateway"
      - deployment: "backendappgateway"
        environment: "stg"
        dependsOn: "sbox_backendappgateway"
      - deployment: "backendappgateway"
        environment: "demo"
        dependsOn: "sbox_backendappgateway"
      - deployment: "backendappgateway"
        environment: "ithc"
        dependsOn: "sbox_backendappgateway"
      - deployment: "backendappgateway"
        environment: "test"
        dependsOn: "sbox_backendappgateway"
      - deployment: "backendappgateway"
        environment: "prod"
        dependsOn: "sbox_backendappgateway"
      - deployment: "appgateway"
        environment: "sbox"
        dependsOn: "Precheck"
      - deployment: "appgateway"
        environment: "dev"
        dependsOn: "sbox_appgateway"
      - deployment: "appgateway"
        environment: "stg"
        dependsOn: "sbox_appgateway"
      - deployment: "appgateway"
        environment: "demo"
        dependsOn: "sbox_appgateway"
      - deployment: "appgateway"
        environment: "ithc"
        dependsOn: "sbox_appgateway"
      - deployment: "appgateway"
        environment: "test"
        dependsOn: "sbox_appgateway"
      - deployment: "appgateway"
        environment: "prod"
        dependsOn: "sbox_appgateway"
      - deployment: "trafficmanager"
        environment: "dev"
        dependsOn: "Precheck"
      - deployment: "trafficmanager"
        environment: "prod"
        dependsOn: "dev_trafficmanager"
      - deployment: "shutter"
        environment: "sbox"
        dependsOn: "Precheck"
      - deployment: "shutter"
        environment: "prod"
        dependsOn: "sbox_shutter"
      - deployment: "apim"
        environment: "sbox"
        dependsOn: "Precheck"
      - deployment: "apim"
        environment: "dev"
        dependsOn: "sbox_apim"
      - deployment: "apim"
        environment: "stg"
        dependsOn: "sbox_apim"
      - deployment: "apim"
        environment: "prod"
        dependsOn: "sbox_apim"
      - deployment: "apim"
        environment: "test"
        dependsOn: "sbox_apim"
      - deployment: "apim"
        environment: "demo"
        dependsOn: "sbox_apim"
      - deployment: "apim"
        environment: "ithc"
        dependsOn: "sbox_apim"
        
  - name: location
    displayName: Location
    type: string
    default: "UK South"
    values:
      - "UK South"
      - "UK West"

variables:
  - name: tfversion
    value: 1.0.4
  - name: project
    value: application
  - name: timeoutInMinutes
    value: "60"
  - name: agentPool
    value: "ubuntu-18.04"
  - name: build
    value: $(Build.BuildNumber)
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: product
    value: "sds-platform"
  - name: tfInitSub
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"

stages:
  - stage: Precheck
    jobs:
      - job: Validate
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        pool:
          vmImage: ${{ variables.agentPool }}
        steps:
          - checkout: pre-commit-hooks
          - task: TerraformInstaller@0
            displayName: Terraform install
            inputs:
              terraformVersion: ${{ variables.tfversion }}
          - task: AzureKeyVault@1
            displayName: Retrieve keyvault secret for ADO token
            inputs:
              ConnectedServiceName: DCD-CFT-Sandbox
              keyVaultName: infra-vault-sandbox
              secretsFilter: "azure-devops-token"
              runAsPreJob: false

          - task: Bash@3
            displayName: Prevent parallel run
            env:
              thisbuild: $(Build.BuildId)
              pipelinedefinition: $(System.DefinitionId)
              azuredevopstoken: $(azure-devops-token)
            inputs:
              filePath: pipeline-scripts/builds-check.sh
          - task: PowerShell@2
            displayName: Run tests
            inputs:
              targetType: "filePath"
              filePath: $(System.DefaultWorkingDirectory)/pipeline-scripts/pester-tests.ps1
              pwsh: true
          - task: PublishTestResults@2
            displayName: "Publish Test Results **/TEST-*.xml"
            inputs:
              testResultsFormat: NUnit
              failTaskOnFailedTests: true
            condition: always()
          - task: Bash@3
            displayName: "Application Gateway Backend Check"
            inputs:
              targetType: 'inline'
              script: cd sds-azure-platforms && ../pre-commit-hooks/pre-commit-hooks/app_gateway_backend_check.sh
              failOnStderr: true

  - ${{ each parameter in parameters.components }}:
      - stage: ${{ parameter.environment }}_${{ parameter.deployment }}
        displayName: ${{ parameter.environment }}_${{ parameter.deployment }}
        dependsOn: ${{ parameter.dependsOn }}
        jobs:
          - job:
            pool:
              vmImage: ${{ variables.agentPool }}
            steps:
              - template: pipeline-templates/terraform.yaml
                parameters:
                  environment: ${{ parameter.environment }}
                  location: ${{ parameters.location }}
                  stack: ${{ parameter.deployment }}
                  project: $(project)
                  tfversion: $(tfversion)
                  serviceConnection: "OPS-APPROVAL-GATE-${{ upper(parameter.environment) }}-ENVS"
                  product: $(product)
                  tfInitSub: ${{ variables.tfInitSub }}
